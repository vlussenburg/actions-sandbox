on: push

jobs:

  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - id: set-matrix
        run: |
          #matrix=$(./command-to-find-testcases.sh)
          matrix='{"subcommand": ["df", "gs", "cp"], "include": [{"subcommand": "md5", "optionalArgs": "@s"}]}'
          echo $matrix
          echo $matrix | jq .
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  mayhem-async:
    runs-on: ubuntu-latest
    name: 'fuzz'
    needs: matrix
    
    strategy:
      fail-fast: false
      #matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
      matrix: 
        subcommand: ["df", "gs", "cp"]
        # The include keyword that adds a new variable
        include:
          - subcommand: md5
            optionalArgs: "@s"
            
    steps:
      - id: mayhem-run-${{ matrix.subcommand }}
        name: Simulate running mayhem async (no wait)
        run: |
          echo "${{ matrix.subcommand }} ${{ matrix.optionalArgs }}"
          echo "runId=${{ matrix.subcommand }} ${{ matrix.optionalArgs }}" >> $GITHUB_OUTPUT

  check-mayhem-result:
    runs-on: ubuntu-latest
    needs: [mayhem-async, matrix]

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v3

      - id: mayhem-check
        name: Simulate checking mayhem results
        run: |
          # can't nest, but equivalent of: ${{ needs.mayhem-async.steps.mayhem-run-${{ matrix.subcommand }}.outputs.runId }}
          echo: ${{ needs.mayhem-async.steps.mayhem-run-[format('{0}', matrix.subcommand)].outputs.runId }}
